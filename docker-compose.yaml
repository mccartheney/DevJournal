services:
  app:
    build:
      context: ./app
      dockerfile: app.Dockerfile
    volumes:
      - ./app:/app
    networks:
      - webappNet
      - globalNet
    expose:
      - "3000"  # Exp천e a porta 3000 para Nginx, mas n찾o ao host

  api:
    build:
      context: ./api
      dockerfile: api.Dockerfile
    volumes:
      - ./api:/api
    networks:
      - webappNet
      - dbNet
      - globalNet
    expose:
      - "8005"  # Exp천e a porta 8005 para Nginx, mas n찾o ao host

  mongo:
    image: mongo
    restart: always
    volumes:
      - data:/data/db
    environment:
      MONGO_INITDB_DATABASE: journal_db
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    networks:
      - dbNet
      - globalNet


  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_MONGODB_URL: mongodb://admin:password@mongo:27017/?authSource=admin
      ME_CONFIG_BASICAUTH: false
    networks:
      - dbNet
      - globalNet
  


  nginx:
    image: nginx:latest
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./ssl:/etc/ssl
    ports:
      - "443:443"
      - "80:80"
    networks:
      - webappNet
      - globalNet
    depends_on:
      - app
      - api

networks:
  globalNet:
    driver: bridge

  webappNet:
    driver: bridge

  dbNet:
    driver: bridge


volumes:
  data:
  config:
